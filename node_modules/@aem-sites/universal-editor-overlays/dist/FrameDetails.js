"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.runFrameDetailsObserver = void 0;

var _debounce = require("debounce");

var _constants = require("./constants");

/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */
var details = {
  viewport: {
    width: 0,
    height: 0
  },
  frame: {
    width: 0,
    height: 0
  },
  scroll: {
    x: 0,
    y: 0
  }
};

var notifyEditor = function notifyEditor(_ref) {
  var editor = _ref.editor;
  editor === null || editor === void 0 ? void 0 : editor.updateFrameDetails({
    details: details
  });
};

var scrollObserver = function scrollObserver(_ref2) {
  var target = _ref2.target;
  var html = target.documentElement;
  details.scroll.x = html.scrollLeft;
  details.scroll.y = html.scrollTop;
};

var resizeObserver = function resizeObserver(_ref3) {
  var target = _ref3.target;
  var viewportWidth = Math.max(target.document.documentElement.clientWidth || 0, target.innerWidth || 0);
  var viewportHeight = Math.max(target.document.documentElement.clientHeight || 0, target.innerHeight || 0);

  var _target$document$docu = target.document.documentElement.getBoundingClientRect(),
      frameWidth = _target$document$docu.width,
      frameHeight = _target$document$docu.height;

  details.viewport = {
    width: viewportWidth,
    height: viewportHeight
  };
  details.frame = {
    width: Math.ceil(frameWidth),
    height: Math.ceil(frameHeight)
  };
};

var runFrameDetailsObserver = function runFrameDetailsObserver(_ref4) {
  var editor = _ref4.editor;
  var frame = window;
  frame.document.addEventListener("scroll", (0, _debounce.debounce)(function (_ref5) {
    var target = _ref5.target;
    scrollObserver({
      target: target
    });
    notifyEditor({
      editor: editor
    });
  }, _constants.DISCOVERY_DEBOUNCE_MS));
  frame.addEventListener("resize", (0, _debounce.debounce)(function (_ref6) {
    var target = _ref6.target;
    resizeObserver({
      target: target
    });
    notifyEditor({
      editor: editor
    });
  }, _constants.DISCOVERY_DEBOUNCE_MS));
  frame.addEventListener("orientationchange", (0, _debounce.debounce)(function (_ref7) {
    var target = _ref7.target;
    scrollObserver({
      target: frame.document
    });
    resizeObserver({
      target: target
    });
    notifyEditor({
      editor: editor
    });
  }, _constants.DISCOVERY_DEBOUNCE_MS)); // body size observer to handle slow or lazy loading pages, changing their dimensions unexpectedly

  var bodyResizeHandler = function bodyResizeHandler() {
    resizeObserver({
      target: frame
    });
    notifyEditor({
      editor: editor
    });
  };

  var bodyResizeObserver = new ResizeObserver((0, _debounce.debounce)(bodyResizeHandler, _constants.DISCOVERY_DEBOUNCE_MS));
  bodyResizeObserver.observe(frame.document.body); // compute initial details and notify editor

  requestAnimationFrame(function () {
    scrollObserver({
      target: frame.document
    });
    resizeObserver({
      target: frame
    });
    notifyEditor({
      editor: editor
    });
  });
};

exports.runFrameDetailsObserver = runFrameDetailsObserver;
//# sourceMappingURL=FrameDetails.js.map