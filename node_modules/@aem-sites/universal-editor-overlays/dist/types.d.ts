declare type Editable = {
    ref: string;
    rect: DOMRect;
};
declare type ScrollPosition = {
    x: number;
    y: number;
};
declare type EditablesList = {
    offset: ScrollPosition;
    editables: Editable[];
};
interface EditableDiscoveryParams {
    callback: (args: EditablesList) => void;
}
interface MutationObserverHookParams {
    element: Node;
    callback: (changes: MutationRecord[]) => void;
    options?: {
        config: MutationObserverInit;
    };
}
interface EditableDiscoveryHookParams {
    element: Node;
}
declare type ViewPortSize = {
    width: number;
    height: number;
};
interface UseWindowSizeHook {
    windowSize: ViewPortSize;
}
interface EditorApi {
    editor: {
        repaintEditables: ({ editables }: {
            editables: any;
        }) => void;
        navigateTo: ({ href: string }: {
            href: any;
        }) => void;
        handshake: () => Promise<string>;
    };
}
export { Editable, EditablesList, ScrollPosition, MutationObserverHookParams, EditableDiscoveryHookParams, EditableDiscoveryParams, UseWindowSizeHook, EditorApi, };
