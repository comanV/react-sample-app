"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.runEditableDiscovery = exports.EditableDiscovery = void 0;

var _react = _interopRequireWildcard(require("react"));

var _client = _interopRequireDefault(require("react-dom/client"));

var _hooks = require("./hooks");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/*
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */
var EditableDiscovery = function EditableDiscovery(_ref) {
  var callback = _ref.callback;

  var _useEditableDiscovery = (0, _hooks.useEditableDiscovery)(),
      editables = _useEditableDiscovery.editables;

  var editablesMemo = (0, _react.useMemo)(function () {
    return editables;
  }, [editables]);
  (0, _react.useEffect)(function () {
    callback && callback({
      editables: editablesMemo
    });
  }, [callback, editablesMemo]);
  return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null);
};

exports.EditableDiscovery = EditableDiscovery;

var runEditableDiscovery = function runEditableDiscovery(_ref2) {
  var editor = _ref2.editor;

  // discovery callback
  var callback = function callback(_ref3) {
    var editables = _ref3.editables;
    editor.repaintEditables({
      editables: editables
    });
  }; // render EditableDiscovery to start editable discovery observer


  var discoveryContainer = document.createElement("div");

  var discovery = _client["default"].createRoot(discoveryContainer);

  discovery.render( /*#__PURE__*/_react["default"].createElement(EditableDiscovery, {
    callback: callback
  }));
  document.body.appendChild(discoveryContainer);
};

exports.runEditableDiscovery = runEditableDiscovery;
//# sourceMappingURL=EditableDiscovery.js.map