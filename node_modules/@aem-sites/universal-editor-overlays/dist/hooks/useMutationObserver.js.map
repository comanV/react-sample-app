{"version":3,"file":"useMutationObserver.js","names":["DEFAULT_OPTIONS","config","attributes","characterData","childList","subtree","attributeOldValue","characterDataOldValue","useMutationObserver","element","callback","options","useState","observer","setObserver","useEffect","instance","MutationObserver","observe","e","console","error","disconnect"],"sources":["../../src/hooks/useMutationObserver.ts"],"sourcesContent":["/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport { useEffect, useState } from \"react\";\nimport { MutationObserverHookParams } from \"../types\";\n\nconst DEFAULT_OPTIONS = {\n  config: {\n    attributes: true,\n    characterData: true,\n    childList: true,\n    subtree: true,\n    attributeOldValue: true,\n    characterDataOldValue: true,\n  },\n};\n\nconst useMutationObserver = ({ element, callback, options = DEFAULT_OPTIONS }: MutationObserverHookParams): void => {\n  const [observer, setObserver] = useState<MutationObserver | null>(null);\n\n  useEffect(() => {\n    if (typeof callback === \"function\") {\n      const instance = new MutationObserver(callback);\n      setObserver(instance);\n    }\n  }, [callback, options, setObserver]);\n\n  useEffect(() => {\n    if (!observer || !element) {\n      return;\n    }\n\n    try {\n      observer.observe(element, options.config);\n    } catch (e) {\n      console.error(\"todo: useMutationObserver error\", e);\n    }\n\n    return () => {\n      if (observer) {\n        observer.disconnect();\n        setObserver(null);\n      }\n    };\n  }, [observer, element, options]);\n};\n\nexport { useMutationObserver };\n"],"mappings":";;;;;;;AAYA;;;;;;;;;;;;;;AAGA,IAAMA,eAAe,GAAG;EACtBC,MAAM,EAAE;IACNC,UAAU,EAAE,IADN;IAENC,aAAa,EAAE,IAFT;IAGNC,SAAS,EAAE,IAHL;IAINC,OAAO,EAAE,IAJH;IAKNC,iBAAiB,EAAE,IALb;IAMNC,qBAAqB,EAAE;EANjB;AADc,CAAxB;;AAWA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAwF;EAAA,IAArFC,OAAqF,QAArFA,OAAqF;EAAA,IAA5EC,QAA4E,QAA5EA,QAA4E;EAAA,wBAAlEC,OAAkE;EAAA,IAAlEA,OAAkE,6BAAxDX,eAAwD;;EAClH,gBAAgC,IAAAY,eAAA,EAAkC,IAAlC,CAAhC;EAAA;EAAA,IAAOC,QAAP;EAAA,IAAiBC,WAAjB;;EAEA,IAAAC,gBAAA,EAAU,YAAM;IACd,IAAI,OAAOL,QAAP,KAAoB,UAAxB,EAAoC;MAClC,IAAMM,QAAQ,GAAG,IAAIC,gBAAJ,CAAqBP,QAArB,CAAjB;MACAI,WAAW,CAACE,QAAD,CAAX;IACD;EACF,CALD,EAKG,CAACN,QAAD,EAAWC,OAAX,EAAoBG,WAApB,CALH;EAOA,IAAAC,gBAAA,EAAU,YAAM;IACd,IAAI,CAACF,QAAD,IAAa,CAACJ,OAAlB,EAA2B;MACzB;IACD;;IAED,IAAI;MACFI,QAAQ,CAACK,OAAT,CAAiBT,OAAjB,EAA0BE,OAAO,CAACV,MAAlC;IACD,CAFD,CAEE,OAAOkB,CAAP,EAAU;MACVC,OAAO,CAACC,KAAR,CAAc,iCAAd,EAAiDF,CAAjD;IACD;;IAED,OAAO,YAAM;MACX,IAAIN,QAAJ,EAAc;QACZA,QAAQ,CAACS,UAAT;QACAR,WAAW,CAAC,IAAD,CAAX;MACD;IACF,CALD;EAMD,CAjBD,EAiBG,CAACD,QAAD,EAAWJ,OAAX,EAAoBE,OAApB,CAjBH;AAkBD,CA5BD"}